{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","empty","sortField","setSortField","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","name","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBYA,E,0EAbCC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGUD,K,YAAAA,E,gBAAAA,E,UAAAA,M,KAqCL,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,OAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACMC,EAlCR,SACEC,EACAL,EACAE,GAEA,IAAII,EAAa,YAAOD,GAuBxB,OArBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,KACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QAGE,OAFAN,EAAa,YAAOA,GAEb,MAKXJ,GACFI,EAAcO,UAGTP,EAMcQ,CAAiBlB,EAAiBI,EAAWE,GAOlE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMf,EAAaN,EAASe,OACrCO,KAAK,SACLF,UAAWG,IAAG,SAAU,UACtB,CAAE,WAAYlB,IAAcL,EAASe,OAJzC,iCASA,wBACEM,QAAS,kBAAMf,EAAaN,EAASiB,SACrCK,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CAAE,WAAYlB,IAAcL,EAASiB,SAJzC,4BASA,wBACEI,QAAS,kBAAMb,GAAcD,IAC7Be,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CAAE,YAA0B,IAAdhB,IAJlB,sBAUGF,GAAaE,IAEZ,wBACEe,KAAK,SACLF,UAAU,4BACVC,QAzCZ,WACEf,EAAaN,EAASI,OACtBI,GAAa,IAoCL,sBAWN,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC5GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3197d67d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport enum SortType {\n  name = 'name',\n  length = 'length',\n  empty = '',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortField: SortType,\n  isReverse: boolean,\n): string[] {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.name:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          preparedGoods = [...preparedGoods];\n\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.empty);\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, isReverse);\n\n  function reset() {\n    setSortField(SortType.empty);\n    setIsReverse(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortType.name)}\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SortType.name })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.length)}\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SortType.length })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReverse(!isReverse)}\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': isReverse === false })}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortField || isReverse)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}